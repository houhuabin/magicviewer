/*
 * FontPanel.java
 *
 * Created on October 16, 2008, 9:04 AM
 */
package Magic.Options.Alignment;

import Magic.WinMain.MagicFrame;
import Magic.Units.Color.BaseImage;
import Magic.Units.File.Parameter.Log;

;

import javax.swing.*;

import java.awt.*;

import javax.swing.JColorChooser;

/**
 *
 * @author  HHB
 */
public class FontChoosePanel extends javax.swing.JPanel {

    private Font current = Log.instance().alignPara.DNA_FONT;//表示当然选中的字体
    private GraphicsEnvironment ge;//表示当前的图形环境
    private String fontName = "Courier new";
    private int fontStyle = Font.PLAIN, fontSize = 20;
    private MagicFrame parent;//表示父类的组件窗体
    private Color currentColor;
    private boolean inited = false;

    public FontChoosePanel(MagicFrame parent) {

        this.parent = parent;

        initComponents();

        initOther();

    }

    private void initOther() {
        current = Log.instance().alignPara.DNA_FONT;
        currentColor = Log.instance().alignPara.DNA_COLOR;
        fontSize = Log.instance().alignPara.DNA_FONT.getSize();
        fontStyle = Log.instance().alignPara.DNA_FONT.getStyle();
        fontName = Log.instance().alignPara.DNA_FONT.getFamily();

        ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String[] family = ge.getAvailableFontFamilyNames();

        for (String familyone : family) {
            fonts.addItem(familyone);
        }

        fonts.setEditable(false);

        fonts.setSelectedItem(Log.instance().alignPara.DNA_FONT.getFamily());
        value_slider.setValue(Log.instance().alignPara.DNA_FONT.getSize() << 1);
        inited = true;
    }

    public static void main(String[] args) {
        JFrame jf = new JFrame();
        FontChoosePanel fcp = new FontChoosePanel(new MagicFrame());
        fcp.setVisible(true);
        jf.add(fcp);
        jf.setSize(200, 200);
        jf.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        border_color_panel = new javax.swing.JPanel();
        value_slider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fonts = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        border_color_panel.setBackground(new java.awt.Color(255, 255, 255));
        border_color_panel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        border_color_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                border_color_panelMousePressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout border_color_panelLayout = new org.jdesktop.layout.GroupLayout(border_color_panel);
        border_color_panel.setLayout(border_color_panelLayout);
        border_color_panelLayout.setHorizontalGroup(
            border_color_panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 164, Short.MAX_VALUE)
        );
        border_color_panelLayout.setVerticalGroup(
            border_color_panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 11, Short.MAX_VALUE)
        );

        value_slider.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        value_slider.setMaximumSize(new java.awt.Dimension(32767, 40));
        value_slider.setMinimumSize(new java.awt.Dimension(36, 40));
        value_slider.setPreferredSize(new java.awt.Dimension(200, 40));
        value_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                value_sliderStateChanged(evt);
            }
        });

        jLabel1.setText("Size");

        jLabel2.setText("Family");

        fonts.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fontsItemStateChanged(evt);
            }
        });
        fonts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontsActionPerformed(evt);
            }
        });

        jLabel3.setText("Color");

        jCheckBox1.setText("Bold");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Italic");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Style");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel4)
                        .add(18, 18, 18)
                        .add(jCheckBox1)
                        .add(18, 18, 18)
                        .add(jCheckBox2))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(value_slider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                            .add(fonts, 0, 178, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(jLabel3)
                        .add(18, 18, 18)
                        .add(border_color_panel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(fonts, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(14, 14, 14)
                        .add(jLabel1))
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(value_slider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(8, 8, 8)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(border_color_panel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .add(16, 16, 16)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jCheckBox1)
                    .add(jCheckBox2)
                    .add(jLabel4))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void border_color_panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_border_color_panelMousePressed
// TODO add your handling code here:
    Color color = JColorChooser.showDialog(this, "Set ID Color", border_color_panel.getBackground());
    if (color != null) {
        border_color_panel.setBackground(color);
        currentColor = color;
         Log.instance().alignPara.DNA_COLOR = currentColor;
        reset();
//         demo.setForeground(color);
    }
}//GEN-LAST:event_border_color_panelMousePressed

private void value_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_value_sliderStateChanged

    int value = value_slider.getValue();
    fontSize = (value >> 1);
    if (fontSize <= 0) {
        fontSize = 1;
    }

    reset();
}//GEN-LAST:event_value_sliderStateChanged

private void fontsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontsActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_fontsActionPerformed

    private void reset() {
        current = new Font(fontName, fontStyle, fontSize);
        int oldFontWidth = Log.instance().alignPara.baseWidth;
        Font oldFont = Log.instance().alignPara.DNA_FONT;
        parent.setAligmentFont(oldFontWidth, oldFont, current);
        //demo.setFont(current);
       /* Log.instance().alignPara.baseWidth = parent.assemblyPanel.getFontMetrics(current).charWidth('A');
        Log.instance().alignPara.baseHeight = parent.assemblyPanel.getFontMetrics(current).getAscent();
        Log.instance().alignPara.DNA_FONT = current;
        Log.instance().alignPara.DNA_COLOR = currentColor;
        BaseImage.reset();


        parent.seqData.pileupEntries.setTrackViewPropoery();
        parent.assemblyPanelRepaint();
        parent.annotationPanel.updateSlider();
        parent.annotationPanel.repaint();*/
    }

private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed

    if (jCheckBox1.isSelected()) {
        fontStyle = fontStyle | Font.BOLD;
    } else {
        fontStyle = fontStyle & (~Font.BOLD);
    }
    reset();
    // TODO add your handling code here:
}//GEN-LAST:event_jCheckBox1ActionPerformed

private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
    if (jCheckBox2.isSelected()) {
        fontStyle = fontStyle | Font.ITALIC;
    } else {
        fontStyle = fontStyle & (~Font.ITALIC);
    }    // TODO add your handling code here:
    reset();
}//GEN-LAST:event_jCheckBox2ActionPerformed

private void fontsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fontsItemStateChanged

    if (inited) {
        fontName = (String) fonts.getSelectedItem();
        reset();
    }

    // TODO add your handling code here:
}//GEN-LAST:event_fontsItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel border_color_panel;
    private javax.swing.JComboBox fonts;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider value_slider;
    // End of variables declaration//GEN-END:variables
}
