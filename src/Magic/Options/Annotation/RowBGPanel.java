/*
 * RowBGPanel.java
 *
 * Created on October 16, 2008, 11:06 AM
 */
package Magic.Options.Annotation;

import utils.swing.EditorAndRenterer.JPanelEditor;
import utils.swing.EditorAndRenterer.JPanelRenderer;
import Magic.WinMain.MagicFrame;
import java.awt.Color;
import java.awt.Dimension;
import java.util.Vector;
import javax.swing.JCheckBox;
import javax.swing.JColorChooser;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Huabin Hou
 */
public class RowBGPanel extends javax.swing.JPanel {

    private MagicFrame trackFrame;

    /** Creates new form RowBGPanel */
    public RowBGPanel(MagicFrame parent) {
        trackFrame = parent;
        initComponents();
        if(trackFrame.dataRep!=null) initTable();
    }

    public void initTable() {

        DefaultTableModel dm = (DefaultTableModel) row_bg_table.getModel();
        while (dm.getRowCount() > 0) {
            dm.removeRow(0);
        }

        for (int i = 0; i < trackFrame.dataRep.trackNum; i++) {
            Vector<Object> vector = new Vector<Object>();
            String s1 = "" + (i + 1);
            String s2 = trackFrame.dataRep.tracks[i].trackSet.name;
            vector.add(s1);
            vector.add(s2);

            JPanel panel = new JPanel();
            panel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            panel.setBackground(trackFrame.dataRep.tracks[i].backGround);
            panel.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    JPanel panel = (JPanel) evt.getSource();
                    Color color = JColorChooser.showDialog(panel, "show", panel.getBackground());
                    if (color != null) {
                        panel.setBackground(color);
                        int index = -1;
                        JTable table = (JTable) panel.getParent();

                        for (int i = 0; i < table.getRowCount(); i++) {
                            if (table.getValueAt(i, 2).equals(panel)) {
                                index = i;
                                break;
                            }
                        }
                        if (index >= 0) {
                            trackFrame.receiveRowBG(index, color);
                        }
                    }
                }
            });
            vector.add(panel);
            dm.addRow(vector);
        }

        row_bg_table.getColumn(row_bg_table.getColumnName(2)).setCellRenderer(new JPanelRenderer());
        row_bg_table.getColumn(row_bg_table.getColumnName(2)).setCellEditor(new JPanelEditor(new JCheckBox()));

    }

    public void update(MagicFrame parent)
    {
        trackFrame=parent;
        initTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        row_bg_table = new javax.swing.JTable();

        setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jScrollPane2.setFont(new java.awt.Font("Times New Roman", 0, 12));

        row_bg_table.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        row_bg_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Row", "Name", "Color"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        row_bg_table.setColumnSelectionAllowed(true);
        row_bg_table.setRowHeight(22);
        row_bg_table.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(row_bg_table);
        row_bg_table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        row_bg_table.getColumnModel().getColumn(0).setResizable(false);
        row_bg_table.getColumnModel().getColumn(0).setPreferredWidth(20);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable row_bg_table;
    // End of variables declaration//GEN-END:variables
}
