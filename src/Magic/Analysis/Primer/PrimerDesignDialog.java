/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OptionDialog.java
 *
 * Created on Feb 25, 2009, 7:53:15 PM
 */
package Magic.Analysis.Primer;

import utils.swing.ExpandPanel.ExpandPanelAbstract;



import Magic.WinMain.MagicFrame;
import Magic.Tools.Primer.Primer3;
import Magic.Units.File.FastaFile;
import Magic.Units.File.Parameter.ForEverStatic;
import Magic.Units.File.Parameter.StringRep;
import Magic.Units.Gui.Task.NewProgress;
import Magic.Units.Gui.Task.SimpleTask;
import Magic.Units.Track.Track;
import Magic.Units.Gui.Task.SwingWorker;

import java.util.ArrayList;
import utils.swing.ExpandPanel.SettingPanel;
import java.util.Vector;
import javax.swing.JPanel;
import utils.ReportInfo;
import utils.swing.SwingUtil;

/**
 *
 * @author QIJ
 */
public class PrimerDesignDialog extends javax.swing.JDialog {

    private MagicFrame trackFrame;
    public Primer3 primer3 = new Primer3();
    private Track variantTrack;
   // private StepProgress moniter;
    public FastaFile reference;

    public Track getVariantTrack() {
        return variantTrack;
    }
    // private MergeFormatPanel bedPanel;
    // private String outPut;
    //  private Piece[] snps;
    private Vector<JPanel> panels;
    private PirmerDesignPathPanel pathPanel;
    private Primer3MainParaPanel mainParaPanel;
    private Primer3DetailParaPanel detailParaPanel;

    /** Creates new form OptionDialog */
    public PrimerDesignDialog(javax.swing.JFrame trackFrame, Track variantTrack) {
        super(trackFrame, false);
        initComponents();

        this.trackFrame = (MagicFrame) trackFrame;
        this.variantTrack = variantTrack;
        initValues();
    }

    public void initValues() {
        Vector<String> names = new Vector<String>();
        panels = new Vector<JPanel>();
        Vector<Boolean> expand = new Vector<Boolean>();


        //add mian  track
        // String format = FileFormat.checkFileFormatByContent(mainAnnoTrack.trackSet.filename);
        pathPanel = new PirmerDesignPathPanel(this, trackFrame);
        names.add("File Path");
        panels.add(pathPanel);
        expand.add(true);

        mainParaPanel = new Primer3MainParaPanel(this);
        names.add("Primer3 Main Parameters");
        panels.add(mainParaPanel);
        expand.add(true);


        /* detailParaPanel = new Primer3DetailParaPanel();
        names.add("General Primer Picking Conditions");
        panels.add(detailParaPanel);
        expand.add(false);*/



        SettingPanel exp_panel = new SettingPanel(names, panels, expand, this);
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(exp_panel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(exp_panel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        this.pack();

        SwingUtil.setLocation(this);
        this.setVisible(true);
    }

    public void update(MagicFrame parent) {
        trackFrame = parent;
//        bedPanel.update(trackFrame);
    }

    public ArrayList<String> getLoadingStepNames() {
       ArrayList<String>  stepNames = new ArrayList<String> ();
        stepNames.add("Prepare");
        stepNames.add("Calculate");
        stepNames.add("Output");
        //  return stepNames;
        return null;
    }

    public void submit() {
        this.setVisible(false);

         SimpleTask lt = new SimpleTask()
         {
            public void runTask(int paramInt) throws Exception {
                for (JPanel panel : panels) {
                    if (!((ExpandPanelAbstract) panel).setting()) {
                        break;
                    }
                }
                  primer3.readGo(this);
            }

         };
        NewProgress monitor = new NewProgress("Loading Annotation", StringRep.START, lt);
        monitor.startTask();
        if (monitor.getReturnStatus() != ForEverStatic.RET_OK) {
            if (monitor.getReturnStatus() == ForEverStatic.RET_ERR) {
                ReportInfo.reportError(null, monitor.getException());
            }
            return;
        }    

       
        this.dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 216, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 388, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
