/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchDialog.java
 *
 * Created on Apr 10, 2009, 11:04:57 AM
 */
package Magic.Search;

import Magic.IO.DataRep;
import Magic.Units.File.Parameter.StringRep;
import Magic.Units.Main.IntPoint2D;
import Magic.Units.Piece.Piece;
import Magic.Units.Track.Track;
import Magic.WinMain.MagicFrame;
import java.awt.Point;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JPanel;
import utils.swing.ExpandPanel.SettingPanel;
import utils.swing.SwingUtil;

/**
 *
 * @author qij
 */
public class AnnoListDialog extends javax.swing.JDialog {

    private MagicFrame egg_frame;
    SettingPanel exp_panel;
    private ArrayList<ResultsListPanel> resultsPanel = new ArrayList<ResultsListPanel>();
    private DataRep dataRep;
    //DefaultListModel list_model;
    private String KEY = "";
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    /** Creates new form SearchDialog */
    public AnnoListDialog(java.awt.Frame parent) {
        super(parent, false);
        egg_frame = (MagicFrame) parent;
        dataRep = egg_frame.dataRep;
        initComponents();
        initValues();
        SwingUtil.setLocation(this);
        doSearch();
    }

    private void initValues() {
        Vector<String> names = new Vector<String>();
        Vector<JPanel> panels = new Vector<JPanel>();
        Vector<Boolean> expand = new Vector<Boolean>();

        for (int i = 0; i < dataRep.tracks.length; i++) {
            Track track = dataRep.tracks[i];
            ResultsListPanel resultsListPanel = new ResultsListPanel(this, String.valueOf(i));
            resultsPanel.add(resultsListPanel);

            names.add(track.trackSet.name);
            panels.add(resultsListPanel);
        }


        for (int i = 0; i < panels.size(); i++) {
            expand.add(true);
        }
        exp_panel = new SettingPanel(names, panels, expand, this);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(exp_panel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(exp_panel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        this.pack();
    }

    public void doSearch() {

        for (int i = 0; i < dataRep.tracks.length; i++) {
            Track track = dataRep.tracks[i];
            Vector<Piece> result = doSearcTrack(track);
            //  System.out.println("=============result size================" + result.size());
            resultsPanel.get(i).setData(result);
        }
        this.pack();
    }

    public Vector<Piece> doSearcTrack(Track track) {
        Vector<Piece> resultPiece = new Vector<Piece>();
        if (track.currentPieces == null || track.currentPieces.length == 0) {
            return null;
        }
        for (int j = 0; j < track.currentPieces.length; j++) {

            Piece piece = (Piece) track.currentPieces[j];
            if (piece.toPopTipString() != null) {
                if (piece.toPopTipString().toUpperCase().contains(KEY)) {
                    /*id_vec.add(new IntPoint2D(i, j, 0));
                    id_string_vec.add(piece.toDetailString());*/
                    resultPiece.add(piece);
                }
            } else {
                //  System.out.println("------------------" + piece.geneticPiece.start);
            }
        }
        return resultPiece;
    }

  /*
    public void receiveFromList(String type, int pieceIndex) {

        if (type != null && !type.equals("")) {
            int trackIndex = Integer.valueOf(type);
            Piece piece = dataRep.tracks[trackIndex].currentPieces[pieceIndex];
            MagicFrame.instance.gotoPieceSite(piece);
        }
    }*/

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("Close");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 380, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 376, Short.MAX_VALUE)
        );

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jTextField1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .add(18, 18, 18)
                .add(jButton1)
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .add(157, 157, 157)
                .add(okButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1))
                .add(18, 18, 18)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(okButton))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(RET_OK);
}//GEN-LAST:event_okButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String k = jTextField1.getText();
        if (k != null) {
            KEY = jTextField1.getText().toUpperCase();
        } else {
            KEY = "";
        }

        doSearch();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
}
