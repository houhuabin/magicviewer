/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AssemblyPanel2.java
 *
 * Created on Dec 9, 2009, 2:25:52 PM
 */
package Magic.WinMain;

import Magic.IO.DataRep;
import Magic.Units.File.Parameter.ForEverStatic;
import Magic.Units.File.Parameter.Log;
import Magic.Units.Gui.Windows.MagicPanel;
import java.awt.BorderLayout;
import java.awt.Graphics2D;
import javax.swing.JPanel;

/**
 *
 * @author lenovo
 */
public class AnnoAssemblyPanel extends MagicPanel {

    public AnnotationPanel annotationPanel;
    public AxiPanel axiPanel;
    public int selectX;

    /** Creates new form AssemblyPanel2 */
    public AnnoAssemblyPanel(MagicFrame magicFrame) {
        this.magicFrame = magicFrame;
        initComponents();
        this.annotationPanel = new AnnotationPanel(magicFrame);
        this.axiPanel = new AxiPanel(magicFrame);
        setAssembly();
    }

    public void setAssembly() {
        this.setLayout(new BorderLayout());
        this.add(this.annotationPanel, BorderLayout.CENTER);
        this.add(this.axiPanel, BorderLayout.SOUTH);

    }

    public void clearData() {
        annotationPanel.clearData();
    }

    public void setSite() {
        annotationPanel.setSite();
    }

    public void loadData(DataRep dataSource) {
        annotationPanel.loadData(dataSource);
        axiPanel.loadData();
    }

    public void translate(final int x, int y) {
       // System.out.println(x);
        dx = x;
        dy = y;
        annotationPanel.translate(x, y);
        axiPanel.translate(x, 0);
    }

    public void zoomIn() {
        //System.out.println("+");
        if (Log.instance().annoPara.ZOOM == 0) {
            return;
        }
        if (Log.instance().annoPara.ZOOM >= 1) {
            Log.instance().annoPara.ZOOM -= magicFrame.ZOOM_STEP;
        }
        annotationPanel.clearData();
        magicFrame.setBarsAmount();
        axiPanel.updateSlider();
        magicFrame.gotoSiteAndValidate(magicFrame.gotoPosion,true);

      /*  magicFrame.setPosionsByGotoPosion(false);
        magicFrame.gotoPosionAndReload(false);
        magicFrame.horiz1.setMaximum(getMaxWidth() >> Log.instance().annoPara.ZOOM);
        axiPanel.updateSlider();
        // System.out.println("pre---------"+magicFrame.getHorizontal().getMaximum()+"   "+this.getMaxWidth());
        magicFrame.setBarsAmount();
       // System.out.println("after---------"+magicFrame.getHorizontal().getMaximum()+"   "+this.getMaxWidth());
        reflash();*/

    }

  

    public void zoomOut() {
        //System.out.println("-");
        if (Log.instance().annoPara.ZOOM < 15) {
            if (getMaxWidth() >> Log.instance().annoPara.ZOOM < ForEverStatic.desktopBoundsWidth) {
                return;
            }
            Log.instance().annoPara.ZOOM += magicFrame.ZOOM_STEP;
        } else {
            return;
        }
        annotationPanel.clearData();
        magicFrame.setBarsAmount();
        axiPanel.updateSlider();
        magicFrame.gotoSiteAndValidate(magicFrame.gotoPosion,true);

      //  magicFrame.gotoPosionAndReload(false);
       // magicFrame.horiz1.setMaximum(getMaxWidth() >> Log.instance().annoPara.ZOOM);
      // 
        //  System.out.println("pre---------"+magicFrame.getHorizontal().getMaximum()+"   "+this.getMaxWidth());
    
       // System.out.println("after---------"+magicFrame.getHorizontal().getMaximum()+"   "+this.getMaxWidth());
        // magicFrame.gotoPosion = temp;
        //reflash();
    }

      public void reflash() {
        //        trackFrame.linear_panel.blocks_in_window.clear();
        annotationPanel.ifPaint = true;
        annotationPanel.setUpdateBuffer(true);
         annotationPanel.setSite();

        annotationPanel.repaint();
        axiPanel.updateSlider();
        axiPanel.repaint();
        repaint();
    }

    public void setMaxHeight(int maxHeight) {
        this.maxHeight = maxHeight;
        annotationPanel.setMaxHeight(maxHeight);
        axiPanel.setMaxHeight(maxHeight);

    }

    public void setMaxWidth(int maxWidth) {
        this.maxWidth = maxWidth;
        annotationPanel.setMaxWidth(maxWidth);
        axiPanel.setMaxWidth(maxWidth);
    }

    public int getMaxHeight() {
        //System.out.println(axiPanel.getMaxHeight()+"----------------------"+annotationPanel.getMaxHeight());
        return annotationPanel.getMaxHeight() + axiPanel.getMaxHeight();
    }

    public int getMaxWidth() {
        //return annotationPanel.getMaxWidth()>>Log.instance().annoPara.ZOOM;
        return maxWidth;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
reflash();
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentResized

    public void init() {
    }

    @Override
    public void paintBuffer(Graphics2D g) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }
    //private JScrollPane jScrollPane1 = new JScrollPane();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
