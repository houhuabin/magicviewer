/*
 * ActionPanel.java
 *
 * Created on October 15, 2008, 3:52 PM
 */
package utils.swing.ExpandPanel;

import Magic.Units.Color.ColorRep;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Polygon;
import java.awt.Rectangle;
import javax.swing.JPanel;
import org.jdesktop.layout.GroupLayout;
import org.jdesktop.layout.GroupLayout.ParallelGroup;

/**
 *
 * @author Huabin Hou
 */
public class ActionPanel extends javax.swing.JPanel {

    private boolean EXPANDED = true;
    private Color open_up_color1 = new Color(200, 255, 238);
    private Color open_up_color2 = new Color(149, 240, 193);
    private Color open_down_color1 = new Color(90, 229, 143);
    private Color open_down_color2 = new Color(171, 250, 227);
    //  private Color polygon_color = new Color(30, 144, 255);
    private Color close_up_color1 = Color.WHITE;
    private Color close_up_color2 = new Color(226, 230, 226);
    private Color close_down_color1 = new Color(205, 205, 205);
    private Color close_down_color2 = new Color(238, 240, 236);
    private Polygon open;
    private Polygon close;
    private int HEIGHT = 20;
    private int TRI_BASE = 10;
    private int TRI_HEIGHT = 8;
    private String name;
    private Font font = new Font("Times New Roman", 0, 12);

    public ActionPanel(String n) {
        this.name = n;
        initComponents();

        int[] x = {this.HEIGHT / 2 - (this.TRI_BASE / 2), this.HEIGHT / 2 + this.TRI_BASE / 2, this.HEIGHT / 2};
        int[] y = {this.HEIGHT / 2 - (this.TRI_HEIGHT / 2), this.HEIGHT / 2 - (this.TRI_HEIGHT / 2), this.HEIGHT / 2 + this.TRI_HEIGHT / 2};
        this.open = new Polygon(x, y, 3);

        x = new int[]{this.HEIGHT / 2 - (this.TRI_HEIGHT / 2), this.HEIGHT / 2 + this.TRI_HEIGHT / 2, this.HEIGHT / 2 - (this.TRI_HEIGHT / 2)};
        y = new int[]{this.HEIGHT / 2 - (this.TRI_BASE / 2), this.HEIGHT / 2, this.HEIGHT / 2 + this.TRI_BASE / 2};
        this.close = new Polygon(x, y, 3);

        setPreferredSize(new Dimension(100, this.HEIGHT + 1));
    }

    public boolean isExpanded() {
        return this.EXPANDED;
    }

    public void setExpand(boolean if_open) {
        this.EXPANDED = if_open;
    }

    public void paintComponent(Graphics g1) {
        GradientPaint gp;
        Graphics2D g = (Graphics2D) g1;
        Rectangle up_rect = new Rectangle(0, 0, getWidth(), this.HEIGHT / 2);
        Rectangle down_rect = new Rectangle(0, this.HEIGHT / 2, getWidth(), this.HEIGHT / 2);
        Rectangle full_rect = new Rectangle(0, 0, getWidth(), this.HEIGHT);
        if (this.EXPANDED) {
            gp = new GradientPaint(up_rect.x, up_rect.y, this.open_up_color1, up_rect.x, up_rect.y + up_rect.height, this.open_up_color2, true);
            g.setPaint(gp);
            g.fill(up_rect);

            gp = new GradientPaint(down_rect.x, down_rect.y, this.open_down_color1, down_rect.x, down_rect.y + down_rect.height, this.open_down_color2, true);
            g.setPaint(gp);
            g.fill(down_rect);

            g.setColor(open_up_color1.darker());
            g.draw(full_rect);
            g.setColor(ColorRep.warblue);
            g.fillPolygon(this.open);
        } else {
            gp = new GradientPaint(up_rect.x, up_rect.y, this.close_up_color1, up_rect.x, up_rect.y + up_rect.height, this.close_up_color2, true);
            g.setPaint(gp);
            g.fill(up_rect);

            gp = new GradientPaint(down_rect.x, down_rect.y, this.close_down_color1, down_rect.x, down_rect.y + down_rect.height, this.close_down_color2, true);
            g.setPaint(gp);
            g.fill(down_rect);

            g.setColor(close_up_color1.darker());
            g.draw(full_rect);
            g.fillPolygon(this.close);
        }

        g.setColor(Color.BLACK);
        g.setFont(this.font);
        g.drawString(this.name, this.HEIGHT, this.HEIGHT / 2 + 6);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 344, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 14, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
